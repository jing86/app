<?php
1.代码调试
1.1跟踪信息:在ThinkPHP也存在类似于快递运单号的一些信息,用于查看系统的执行状况.
在默认情况下跟踪信息是不会被开启的,如果需要查看跟踪信息,则必须先开启,开启需要通过一个配置项:SHOW_PAGE_TRACE(这个配置项在主配置文件中是不存在的)
因为配置项不存在,如果需要使用,则自行添加 
1.2两种模式 
在ThinkPHP中存在这样两种特殊的模式:调试模式和生产模式
调试模式:就是在开发阶段和调试阶段所使用的模式,错误信息比较详细
生产模式:就是项目上线运行时候使用的模式,错误信息比较模糊
在ThinkPHP中切换两个模式的方法可以通过一个常量来控制:APP_DEBUG
需要在入口文件中定义常时APP_DEBUG
取值是true:表示开启调试模式,取值false表示开启生产模式 
在调试模式下:(不使用缓存)
加载文件数目是28个,加载项是122个;
在生产模式下:(使用缓存)
加载文件数目是11个,加载项是122个;
注意:如果在生产模式下修改了配置文件,不会立即生效,如果需要生效,则必须执行下面操作的任意一个:
第一:开启调试模式,让系统重新加载配置项
第二:删除common~runtime.php文件,让系统重新生成临时文件
1.3sql调试
在ThinkPHP开发的过程,难免会遇到sql的错误,这时就需要使用sql的调试方式,来调整,在Thinkphp中支持对sql的调试
在父类模型中有一个方法:getLastSql();
语法: $model->getLastSql();
作用:返回当前模型中一直到调用该方法之前的最后一条成功执行(没有语法错误)的sql语句
在ThinkPHP3.2以后的版本getLastSql方法支持简写方法:_sql();
1.4性能调试(了解)
在ThinkPHP中系统提供一个快速方法来实现对性能调试,快速方法是G方法
语法格式:
	G('开始标记'):
	...
	需要统计效率的代码段
	...
	G('结束标记');
	echo G('开始标记','结束标记',数字/字符 m);
第三个参数如果是数字,则表示统计代码的执行时间,默认是4(精确到4位小数),单位是秒
二.ThinkPHP中的AR模式
1.什么是AR模式 
AR模式的核心:
类映射到数据表
属性映射字段名
类实例映射到行记录
2.AR模式在ThinkPHP中的应用
AR模式在ThinkPHP中的应用主要体现在CURD操作上
语法格式:
	$model = M()


